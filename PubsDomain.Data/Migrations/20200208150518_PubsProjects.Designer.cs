// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PubsDomain.Data;

namespace PubsDomain.Data.Migrations
{
    [DbContext(typeof(PubsDbContext))]
    [Migration("20200208150518_PubsProjects")]
    partial class PubsProjects
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pubs.Domain.Authors", b =>
                {
                    b.Property<int>("au_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("au_fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("au_lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("au_id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Pubs.Domain.Discounts", b =>
                {
                    b.Property<int>("stor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Salesstor_id")
                        .HasColumnType("int");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<string>("discounttype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("highqty")
                        .HasColumnType("int");

                    b.Property<int>("lowqty")
                        .HasColumnType("int");

                    b.HasKey("stor_id");

                    b.HasIndex("Salesstor_id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Pubs.Domain.Employee", b =>
                {
                    b.Property<int>("emp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Publisherspub_id")
                        .HasColumnType("int");

                    b.Property<string>("fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hire_date")
                        .HasColumnType("int");

                    b.Property<int>("job_id")
                        .HasColumnType("int");

                    b.Property<int>("job_lvl")
                        .HasColumnType("int");

                    b.Property<string>("lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("minit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pub_id")
                        .HasColumnType("int");

                    b.HasKey("emp_id");

                    b.HasIndex("Publisherspub_id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Pubs.Domain.Jobs", b =>
                {
                    b.Property<int>("job_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Employeeemp_id")
                        .HasColumnType("int");

                    b.Property<int>("job_desc")
                        .HasColumnType("int");

                    b.Property<int>("max_lvl")
                        .HasColumnType("int");

                    b.Property<int>("min_lvl")
                        .HasColumnType("int");

                    b.HasKey("job_id");

                    b.HasIndex("Employeeemp_id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Pubs.Domain.Pub_Info", b =>
                {
                    b.Property<int>("pub_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Publisherspub_id")
                        .HasColumnType("int");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pr_info")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pub_id");

                    b.HasIndex("Publisherspub_id");

                    b.ToTable("Pub_Infos");
                });

            modelBuilder.Entity("Pubs.Domain.Publishers", b =>
                {
                    b.Property<int>("pub_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Titlestitle_id")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pub_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pub_id");

                    b.HasIndex("Titlestitle_id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Pubs.Domain.Roysched", b =>
                {
                    b.Property<int>("title_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Titlestitle_id")
                        .HasColumnType("int");

                    b.Property<string>("hirange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lorange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("royalty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("title_id");

                    b.HasIndex("Titlestitle_id");

                    b.ToTable("Royscheds");
                });

            modelBuilder.Entity("Pubs.Domain.Sales", b =>
                {
                    b.Property<int>("stor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Titlestitle_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ord_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ord_num")
                        .HasColumnType("int");

                    b.Property<string>("payterms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<int>("title_id")
                        .HasColumnType("int");

                    b.HasKey("stor_id");

                    b.HasIndex("Titlestitle_id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Pubs.Domain.Stores", b =>
                {
                    b.Property<int>("stor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Salesstor_id")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stor_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stor_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("stor_id");

                    b.HasIndex("Salesstor_id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Pubs.Domain.TitleAuthor", b =>
                {
                    b.Property<int>("au_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Authorsau_id")
                        .HasColumnType("int");

                    b.Property<int?>("Titlestitle_id")
                        .HasColumnType("int");

                    b.Property<string>("au_ord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("royaltyper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("title_id")
                        .HasColumnType("int");

                    b.HasKey("au_id");

                    b.HasIndex("Authorsau_id");

                    b.HasIndex("Titlestitle_id");

                    b.ToTable("TitleAuthors");
                });

            modelBuilder.Entity("Pubs.Domain.Titles", b =>
                {
                    b.Property<int>("title_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("advance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("pub_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("pubdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("royalty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ytd_sales")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("title_id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Pubs.Domain.Discounts", b =>
                {
                    b.HasOne("Pubs.Domain.Sales", "Sales")
                        .WithMany("Discounts")
                        .HasForeignKey("Salesstor_id");
                });

            modelBuilder.Entity("Pubs.Domain.Employee", b =>
                {
                    b.HasOne("Pubs.Domain.Publishers", "Publishers")
                        .WithMany("Employees")
                        .HasForeignKey("Publisherspub_id");
                });

            modelBuilder.Entity("Pubs.Domain.Jobs", b =>
                {
                    b.HasOne("Pubs.Domain.Employee", "Employee")
                        .WithMany("Jobs")
                        .HasForeignKey("Employeeemp_id");
                });

            modelBuilder.Entity("Pubs.Domain.Pub_Info", b =>
                {
                    b.HasOne("Pubs.Domain.Publishers", "Publishers")
                        .WithMany("Pub_Infos")
                        .HasForeignKey("Publisherspub_id");
                });

            modelBuilder.Entity("Pubs.Domain.Publishers", b =>
                {
                    b.HasOne("Pubs.Domain.Titles", "Titles")
                        .WithMany("Publishers")
                        .HasForeignKey("Titlestitle_id");
                });

            modelBuilder.Entity("Pubs.Domain.Roysched", b =>
                {
                    b.HasOne("Pubs.Domain.Titles", "Titles")
                        .WithMany("Royscheds")
                        .HasForeignKey("Titlestitle_id");
                });

            modelBuilder.Entity("Pubs.Domain.Sales", b =>
                {
                    b.HasOne("Pubs.Domain.Titles", "Titles")
                        .WithMany("Sales")
                        .HasForeignKey("Titlestitle_id");
                });

            modelBuilder.Entity("Pubs.Domain.Stores", b =>
                {
                    b.HasOne("Pubs.Domain.Sales", "Sales")
                        .WithMany("Stores")
                        .HasForeignKey("Salesstor_id");
                });

            modelBuilder.Entity("Pubs.Domain.TitleAuthor", b =>
                {
                    b.HasOne("Pubs.Domain.Authors", null)
                        .WithMany("TitleAuthors")
                        .HasForeignKey("Authorsau_id");

                    b.HasOne("Pubs.Domain.Titles", "Titles")
                        .WithMany("TitleAuthors")
                        .HasForeignKey("Titlestitle_id");
                });
#pragma warning restore 612, 618
        }
    }
}
